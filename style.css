/* L'élément racine du html => <html> */
:root {
    --img-height: 233px;
    --img-width: 150px;
    --img-scale: .5;
    --cards-per-row: 3;
}

/* Toutes les balises */
* {
    /* bordures de la boîte */
    border: 0;
    /* Mode de dimensionnement sur la boîte de bordure */
    box-sizing: border-box;
    /* marge extérieure de la boîte */
    margin: 0;
    /* bordure superposée qui apparaît en "focus" */
    outline: 0;
    /* marge intérieure de la boîte */
    padding: 0;
}

/* Tous les <button> */
button {
    /* Couleur de fond (zone du contenu + padding) */
    background-color: transparent;
}

/* Tous les <body> */
body {
    /* Couleur du texte */
    color: #b99a00;
    /* Couleur de fond */
    background-color: #011a00;
    /* Type de police du texte */
    font-family: "Press Start 2P", system-ui;
    /* Taille du texte */
    font-size: 20px;
}

.hidden {
    /* Annule l'affichage, !important empêche qu'on puisse reprendre la priorité dessus */
    display: none!important;
}

/* Tous les <h1>, et les <element class="h1"> */
h1,
.h1 {
    font-family: "Rubik Distressed", system-ui;
    font-size: 2em;
    font-weight: 400;
}

/* Tous les <header> et les <element class="modal"> */
header,
.modal {
    /* Gére la disposition des "enfants-flex" perpendiculairement au "fil" */
    align-items: center;
    /* Activer le système flexbox sur <header> qui devient "parent-flex" */
    display: flex;
    /* Gére l'orientation du "fil" */
    flex-direction: column;
    /* Gére la gouttière (espace de séparation) entre les "enfants flex" */
    gap: 10px;
    padding: 20px;
}

/* Boutons */
.btn {
    background-color: #802d00;
    border: 1px solid #4e5f4d;
    border-radius: 3px;
    padding: 7px 10px 10px;
    position: relative;
}
    .btn::before {
        background-image: 
            radial-gradient(rgba(0, 0, 0, .6), rgba(255, 255, 255, .2) 40%),
            linear-gradient(140deg, rgba(255, 255, 255, .3), transparent 35%);
        border-radius: 3px;
        content: '';
        display: block;
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
    }

    /* Lorsqu'on maintient le doigt (ou le clic) sur le bouton */
    .btn:active {
        background-color: #ff5900;
        border-color: #cc4700;
    }

    .btn:active::before {
        background-image: 
            radial-gradient(rgba(0, 0, 0, .2), rgba(255, 255, 255, .2)),
            linear-gradient(140deg, rgba(255, 255, 255, .3), transparent);
    }

main {
    /* valeurs: haut droite (bas = haut) (gauche = droite) */
    padding: 0 20px;
}

/* Tous éléments qui sont directement dans <element class="score"> */
.scores > * {
    /* Gére l'alignement vertical d'un élément inline par rapport au texte aux inlines voisins */
    vertical-align: middle;
}

/* LE <element id="final-score"> et LE <element id="current-score"> */
#final-score,
#current-score {
    color: #0f0;
    /*
        "em" = 1 cadratin (taille du carractère d'imprimerie)
        C'est un multiplicateur de la dernière taille en pixels donnée au texte
    */
    font-size: 2em;
}

#deck {
    display: flex;
    /* Active le retour à la ligne des enfants flex */
    flex-wrap: wrap;
    gap: 20px;
    margin-right: auto;
    margin-bottom: 20px;
    margin-left: auto;
    /* Perspective des transformations */
    /* Distance en pixels entre le point d'origine (point de fuite) et l'oeil de l'observateur supposé */
    perspective: 800px;
    /* Position du point de fuite par rapport à #deck */
    perspective-origin: 50% 30%;
    width: calc(
        ( 20px * ( var(--cards-per-row) - 1 ) ) /* Nombre gaps */
        + ( 2px * 2 * var(--cards-per-row) ) /* Total des borders */
        + ( var(--img-width) * var(--img-scale) * var(--cards-per-row) ) /* Total des images */
    );
}

/* -- Cartes -- */
.card {
    /* bordures */
    border: 2px solid #0f0;
    /* coins arrondis */
    border-radius: 3px;
    position: relative;
    /* Réalise une animation sur le changement de la rotation */
    transition: transform .2s ease-in;
}

    .card.flipped {
        /* applique une tranformation visuelle qui n'affecte pas les éléments alentours */
        transform: rotateY(.5turn);
    }

/* Version alternative : Tous les éléments dont l'attibut "class" commence par "card-"
[class^="card-"] 
*/
/* Tous les <div> enfants directs de <element class="card"> */
.card > div {
    /* hauteur fixe */
    height: calc( var(--img-height) * var(--img-scale) );
    /* largeur fixe */
    width: calc( var(--img-width) * var(--img-scale));
    background-size: calc( var(--img-width) * var(--img-scale)) calc( var(--img-height) * var(--img-scale) );
}

.card-back {
    background: #008000 url('img/back.webp') center center no-repeat;
    /* Changement du statut de positionnement */
    position: relative;
    /* Ordre du calque de positionnement (1 = derrière, plus = devant) */
    z-index: 2;
}

.card-img {
    background: #008000 center center no-repeat;
    /* Espace entre bord gauche de l'élément et celui de son élément de référence */
    left: 0;
    
    position: absolute;
    /* Espace entre bord gauche de l'élément et celui de son élément de référence */
    top: 0;
    transform: rotateY(.5turn);
    transition: z-index .2s ease-in;
    z-index: 1;
}

    .card.flipped .card-img {
        z-index: 3;
    }

/* -- Modale de victoire -- */
.modal-overlay {
    align-items: center;
    background-color: rgba(0, 0, 0, .7);
    display: flex;
    /* vh= viewport height; 100vh = 100% de la hauteur du viewport */
    height: 100vh;
    justify-content: center;
    left: 0;
    /* Positionne le bloc de la même manière qu'absolute, mais sa référence est toujours l'écran */
    position: fixed;
    top: 0;
    width: 100%;
}

.modal {
    background-color: #4e5f4d;
    border: 2px solid #9bac9a;
    border-radius: 3px;
}


/* -- Responsive -- */
/* - Écrans à partir de 992px de large (desktop) - */
@media (min-width: 992px) {
    :root {
        --img-scale: .9;
        --cards-per-row: 6;
    }

    .btn,
    .card {
        /* Changement du pointeur de la souris. "pointer" est un main avec le doigt pointé */
        cursor: pointer;
    }

    /* Lorsqu'on passe la souris sur le bouton */
    .btn:hover {
        background-color: #ff5900;
        border-color: #cc4700;
    }

    .btn:hover::before {
        background-image: 
            radial-gradient(rgba(0, 0, 0, .2), rgba(255, 255, 255, .2)),
            linear-gradient(140deg, rgba(255, 255, 255, .3), transparent);
    }

}

/* - Écrans à partir de 1440px de large (desktop XXL) - */
@media (min-width: 1440px) {
    :root {
        --img-scale: 1;
        --cards-per-row: 8;
    }
}